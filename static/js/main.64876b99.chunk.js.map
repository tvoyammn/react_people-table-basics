{"version":3,"sources":["pages/HomePage.tsx","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","api/people.ts","pages/NotFoundPage.tsx","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["HomePage","PersonRow","person","className","name","sex","born","died","motherName","fatherName","PeopleTable","people","map","slug","PeoplePage","useState","setPeople","useEffect","fetch","then","res","json","peopleFromServer","personWithParents","mother","find","father","NotFoundPage","Header","to","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"8OAMeA,EAJY,kBACzB,4C,OCkBaC,EAboB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpC,OACE,qBAAIC,UAAU,SAAd,UACE,6BAAKD,EAAOE,OACZ,6BAAKF,EAAOG,MACZ,6BAAKH,EAAOI,OACZ,6BAAKJ,EAAOK,OACZ,6BAAKL,EAAOM,aACZ,6BAAKN,EAAOO,iBCgBHC,G,MApBsB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACnC,wBAAOR,UAAU,cAAjB,UACE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAGJ,gCACGQ,EAAOC,KAAI,SAAAV,GAAM,OAChB,cAAC,EAAD,CAA6BA,OAAQA,GAArBA,EAAOW,gBCPhBC,EAbc,WAC3B,MAA4BC,mBAAmB,IAA/C,mBAAOJ,EAAP,KAAeK,EAAf,KAOA,OALAC,qBAAU,WCNHC,MAAM,qEACVC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAgB,OAAIA,EAAiBV,KAAI,SAACV,GAC9C,IAAMqB,EAAoBrB,EAO1B,OALAqB,EAAkBC,OAASF,EACxBG,MAAK,SAACD,GAAD,OAAoBA,EAAOpB,OAASF,EAAOM,cACnDe,EAAkBG,OAASJ,EACxBG,MAAK,SAACC,GAAD,OAAoBA,EAAOtB,OAASF,EAAOO,cAE5Cc,QDFNJ,MAAK,SAAAG,GAAgB,OAAIN,EAAUM,QACrC,IAGD,cAAC,EAAD,CAAaX,OAAQA,KETVgB,EAJgB,kBAC7B,iDCOaC,EAPU,kBACvB,gCACE,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,UAAT,wBCqBWC,G,MAhBO,kBACpB,sBAAK3B,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO4B,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAE/B,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUH,GAAG,QAE1C,cAAC,IAAD,CAAOE,KAAK,IAAIC,QAAS,cAAC,EAAD,cChB/BC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.64876b99.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage: React.FC = () => (\n  <h1>Home page</h1>\n);\n\nexport default HomePage;\n","import React from 'react';\n\nimport { Person } from '../../types/person';\n\ntype Props = {\n  person: Person\n};\n\nconst PersonRow: React.FC<Props> = ({ person }) => {\n  return (\n    <tr className=\"Person\">\n      <td>{person.name}</td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{person.motherName}</td>\n      <td>{person.fatherName}</td>\n    </tr>\n  );\n};\n\nexport default PersonRow;\n","import React from 'react';\n\nimport PersonRow from '../PersonRow/PersonRow';\n\nimport { Person } from '../../types/person';\n\nimport './PeopleTable.scss';\n\ntype Props = {\n  people: Person[]\n};\n\nconst PeopleTable: React.FC<Props> = ({ people }) => (\n  <table className=\"PeopleTable\">\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n    <tbody>\n      {people.map(person => (\n        <PersonRow key={person.slug} person={person} />\n      ))}\n    </tbody>\n  </table>\n);\n\nexport default PeopleTable;\n","import React, { useEffect, useState } from 'react';\n\nimport { getPeople } from '../api/people';\nimport PeopleTable from '../components/PeopleTable/PeopleTable';\nimport { Person } from '../types/person';\n\nconst PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople()\n      .then(peopleFromServer => setPeople(peopleFromServer));\n  }, []);\n\n  return (\n    <PeopleTable people={people} />\n  );\n};\n\nexport default PeoplePage;\n","import { Person } from '../types/person';\n\nexport const getPeople = (): Promise<Person[]> => {\n  return fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n    .then(res => res.json())\n    .then(peopleFromServer => peopleFromServer.map((person: Person) => {\n      const personWithParents = person;\n\n      personWithParents.mother = peopleFromServer\n        .find((mother: Person) => mother.name === person.motherName);\n      personWithParents.father = peopleFromServer\n        .find((father: Person) => father.name === person.fatherName);\n\n      return personWithParents;\n    }));\n};\n","import React from 'react';\n\nconst NotFoundPage: React.FC = () => (\n  <h1>Page not found</h1>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header: React.FC = () => (\n  <nav>\n    <Link to=\"/\">Home</Link>\n    <Link to=\"/people\">People</Link>\n  </nav>\n);\n\nexport default Header;\n","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\n\nimport HomePage from './pages/HomePage';\nimport PeoplePage from './pages/PeoplePage';\nimport NotFoundPage from './pages/NotFoundPage';\n\nimport Header from './components/Header/Header';\n\nimport './App.scss';\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <Header />\n\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/people\" element={<PeoplePage />} />\n\n      <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n\n      <Route path=\"*\" element={<NotFoundPage />} />\n\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}